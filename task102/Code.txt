package wordcount;

import java.util.TreeMap;
import java.util.Map;

public class wordcount {
    // Task name: Java Program for Word Count
    // Requirements: Handle punctuation marks, whitespace, and case sensitivity appropriately and consider using data structures like HashMap or TreeMap to efficiently store and manage the word count.
    // Input : The quick brown fox jumps over the lazy dog. the lazy dog slept.
    // Output : brown:1 dog:2 fox:1 jumps:1 lazy:2 over:1 quick:1 slept:1 the:2

    // Method to find and print word count
    private static void findWordCount(String sentence) {
        // Using a TreeMap to store words and their counts
        Map<String, Integer> words = new TreeMap<>();

        // Removing punctuation and converting to lower case
        String sanitizedSentence = sentence.replaceAll("[^a-zA-Z ]", "").toLowerCase();

        // Splitting the sentence into words
        for (String word : sanitizedSentence.split("\\s+")) {
            // Checking if the word is already in the map
            if (words.containsKey(word)) {
                // If it is, increment the count by 1
                words.put(word, words.get(word) + 1);
            } else {
                // If it isn't, add the word to the map with a count of 1
                words.put(word, 1);
            }
        }

        // Printing the word counts
        for (Map.Entry<String, Integer> entry : words.entrySet()) {
            System.out.println(entry.getKey() + ":" + entry.getValue());
        }
    }

    public static void main(String[] args) {
        findWordCount("The quick brown fox jumps over the lazy dog. the lazy dog slept.");
    }
}